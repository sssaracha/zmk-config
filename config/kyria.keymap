/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define ONE   1
#define TWO   2
#define THREE   3

/ {
	keymap {
		compatible = "zmk,keymap";


		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          	     |  Y   |  U    |  I    |  O   |   P   | BSPC  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          	     |  H   |  J    |  K    |  L   |   ;   | ENTER |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT | 	 | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | RSHFT |
//                     | CTRL  | WIN  | ALT |  SPACE  |  SPACE  |  	 |   RET   |  SPACE  | MO3  |  BKSP | R-CRTL|
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        	   &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
	                &kp LCTRL &kp LGUI &kp LALT &lt ONE SPACE &kp SPACE        &kp RET  &lt TWO SPACE &kp BSPC &mo THREE &kp RCTRL
			>;
		};
	
	
		second_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |   -   |  1  |  2  |  3   |  4   |  5   |                                          	     |   6  |   7   |   8   |  9   |   0   | BKSP |
// |   -   |  -  |  -  |  -   |  -   |  -   |                                          	     |  "-" |   4   |   5   |  6   |   ;   |   ]  |
// |   -   |  -  |  -  |  -   |  -   |  -   |    -    |    -    | 	 |    -    |    -    |   +  |   1   |   2   |  3   |   -   |   -  |
//                     |   -  |  -   |  -   |   M1    |    -    |  	 |    -    |    M2   |  MO3 |   -   |   -   |
			bindings = <
	&trans   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                          &kp N6 &kp N7  &kp N8  &kp N9  &kp N0   &kp BSPC
	&trans   &trans &trans &trans &trans &trans                                          &kp KP_SUBTRACT &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp SEMI &kp RBKT
	&trans &trans &trans &trans &trans &trans &trans &trans        	       &trans &trans &kp KP_PLUS &kp KP_N1  &kp KP_N2 &kp KP_N3 &trans &trans
	                 &trans &trans &trans &lt ONE SPACE &trans             &trans  &lt TWO SPACE &trans &mo THREE &trans
			>;
		};
	
	
        	third_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | TILDE |  !  |  @  |  #   |  $   |  %   |                                               |   ^  |   &   |   *   |  (   |   )   |  DEL |
// |   -   |  -  | prvs| play | next |  -   |                                               |  "-" |  bt l | btclr | bt r |  "-"  |   '  |
// |   -   |  -  |  -  |  -   |  -   |  -   |    -    |    -    |       |    -    |    -    |   =  |   -   |   -   |  -   |   -   |   -  |
//                     |   -  |  -   |  -   |   M1    |    -    |       |    -    |    M2   |  MO3 |   -   |   -   |
		    bindings = <
	    &kp TILDE &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT                                  &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR &kp DEL
	    &trans &trans &kp C_PREV  &kp C_PLAY_PAUSE &kp C_NEXT &trans                            &kp MINUS &bt BT_PRV  &bt BT_CLR  &bt BT_NXT  &kp MINUS &kp APOS
	    &trans &trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp EQUAL &trans &trans &trans &trans &trans
	                 &trans &trans &trans &lt ONE SPACE &trans        	      &trans  &lt TWO SPACE &trans &mo THREE &trans
			>;
		};
	
	
        	fourth_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | TILDE |  F1 |  F2 |  F3  |  F4  |  F5  |                                               |  F6  |   F7  |   UP  |  F10 |  F11  |  F12 |
// | CAPS  |  -  | VOL-| PLAY | VOL+ |  -   |                                               |  F8  |  LEFT |  DOWN | RIGHT|   ;   |   \  |
// |   -   |  -  |  -  |   -  |  -   |  -   |    -    |    -    |       |    -    |    -    |  F9  |   -   |   -   |  -   |   -   |   -  |
//                     |   -  |  -   |  -   |   M1    |    -    |       |    -    |    M2   |  MO3 |   -   |   -   |
            bindings = <
    &kp TILDE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                                       		&kp F6 &kp F7  &kp UP  &kp F10  &kp F11  &kp F12
    &kp CAPS &trans &kp C_VOL_DN &kp C_PLAY_PAUSE &kp C_VOL_UP  &trans                          &kp F8 &kp LEFT  &kp DOWN  &kp RIGHT  &kp SEMI &kp BSLH
    &trans &trans &trans &trans &trans &trans &trans &trans                   &trans &trans &kp F9 &trans  &trans &trans &trans &trans
                     &trans &trans &trans &lt ONE SPACE &trans                &trans  &lt TWO SPACE &trans &mo THREE &trans
		    >;
		};	
	
	};
};
